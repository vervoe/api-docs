openapi: 3.0.0
info:
  title: Vervoe API
  version: '1.8'
  contact:
    name: Nicole Bowes — Head of Product
    email: Nicole@vervoe.com
    url: 'https://vervoe.com/contact/'
  termsOfService: 'https://vervoe.com/terms-of-use/'
  description: Technical specifications for Vervoe's API
servers:
  - url: 'https://api.vervoe.com/api'
paths:
  /integration/assessments:
    get:
      summary: 'GET: List of assessments'
      tags:
        - Assessments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: Count of private assessments for currentPage.
                  total:
                    type: number
                    description: 'Total count of private assessments. '
                  hasMorePages:
                    type: boolean
                    description: If current page is last page from result outputs false else true.
                  currentPage:
                    type: number
                    description: Current page offset. Must be > 0.
                  items:
                    type: array
                    description: 'Array of private assessments. '
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: The assessment name.
                        description:
                          type: string
                          description: The assessment description.
                        slug:
                          type: string
                          description: Unique identifier for the assessment.
                        questionsCount:
                          type: number
                          description: Count of the number of questions in the assessment excluding the optional final feedback for employer question.
                        skills:
                          type: array
                          items:
                            type: string
                        auditionFolder:
                          type: object
                          description: Assessment Folder Object
                          nullable: true
                          properties:
                            name:
                              type: string
                              description: The assessment folder name
                            uuid:
                              type: string
                              description: Assessment folder UUID
                            auditionCount:
                              type: string
                              description: Number of assessments in folder
                      required:
                        - name
                        - description
                        - slug
                        - questionsCount
                required:
                  - count
                  - total
                  - hasMorePages
                  - currentPage
                  - items
              examples:
                example-1:
                  value:
                    count: 8
                    total: 8
                    hasMorePages: false
                    currentPage: 1
                    items:
                      - name: Backend developer test
                        description: Testing php backend developers
                        slug: assessment_1
                        questionCount: 4
                        skills:
                          - problem solving
                          - javascript
                          - php
                        auditionFolder: null
                      - name: Frontend developer test
                        description: Testing Frontend developers
                        slug: assessment_2
                        questionCount: 3
                        skills:
                          - react
                        auditionFolder:
                          name: my_folder
                          uuid: f83cd542-9a0b-4811-89b7-452c1a995cd1
                          auditionsCount: 1
                      - ...
          headers: {}
      operationId: get-assessments
      description: Returns a paginated list of private assessments available for the current API user.
      parameters: []
    parameters: []
  '/integration/assessments/{slug}/invite':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
        description: Assessment slug to which the candidate is invited
    post:
      summary: 'POST: Invite candidate to assessment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      candidateAssessmentUuid:
                        type: string
                        description: The candidate’s assessment ID. Can be used for obtaining a report for completed assessment.
                      candidateUrl:
                        type: string
                        description: The url by which candidate can complete the assessment.
                required:
                  - success
                  - data
              examples:
                '200':
                  value:
                    success: true
                    data:
                      candidateAssessmentUuid: cbb3e136-ef30-4452-955b-1835a79caa65
                      candidateUrl: 'http://example.com/login?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJmdWxsTmFtZSI6IkZpcnN0TkFNRSBMYXN0bmFtZSIsImVtYWlsIjoidml0YWxpeSs2MDAxMEB2ZXJ2b2UuY29tIiwiaWF0IjoxNTc4OTExMDQ5LCJleHAiOjE1NzkyNTY2NDksImlzRGVtbyI6ZmFsc2UsIm9wcG9ydHVuaXR5U2x1ZyI6ZmFsc2V9.YgEZ3YIzUvD9l4gS9b6DO1oWvIPiozoUL7dZlFJtE4Y8aRwk4dMU9yHOKYhtIbUS572u61xzKMaRwsVPe_N0JV4z5aM1ISvqbW9RH-S1WehhsOdauKBw_qwESHV7CVA-Kh8ondZPAqkM-uxKbwiQFMAwaKB4IgwJ_gnL9k5i7I0&hashCode=d05e35bf-54d9-4ec6-9d13-c73b20e8ef181578911049'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: string
                  data:
                    type: object
                    properties:
                      candidateAssessmentUuid:
                        type: string
                      candidateUrl:
                        type: string
                required:
                  - success
                  - errors
                  - data
              examples:
                400 Bad request - candidate already invited:
                  value:
                    success: false
                    errors: The invitation has been already sent.
                    data:
                      candidateAssessmentUuid: <uuid>
                      candidateUrl: <URL to the assessment>
      operationId: post-assessments-slug-invite
      description: Invites the candidate to complete the assessment by assessment slug.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                candidateEmail:
                  type: string
                  description: The candidate’s email address.
                candidateFirstName:
                  type: string
                  description: Candidate’s first name.
                candidateLastName:
                  type: string
                  description: The candidate’s last name.
                sendInvitationEmail:
                  type: boolean
                  description: 'True by default. The text and company logo in the emails are customizable from within the Vervoe account. '
                redirectCandidateUrl:
                  type: string
                  description: The url to which candidate will be redirected on successful assessment completion.
                candidateAssessmentUuid:
                  type: string
                  description: The optional candidate assessment uuid can be used to obtain invitation url for already invited candidate.
                reapply:
                  type: boolean
                  description: |-
                    False by default. The optional reapply can be used to allow candidates to reapply and there is a need to take the same assessment.

                    if candidateAssessmentUuid doesn’t exist - always create new userAudition

                    if candidateAssessmentUuid exists: 

                    if userAudition  “active“ = 0 - throw error 

                    if userAudition  “active“ = 1 - create new userAudition
                enableFeedback:
                  type: boolean
                  description: False by default. The optional enable feedback can be used to show candidate feedback form after assessment is completed
                sendInvitationSms:
                  type: boolean
                  description: 'False by default. If current plan doesn''t allow sending invitation SMS to candidate, candidatePhone is not set, the SMS limit is reached, not valid candidate phone is used  a BadRequest Exception is triggered.'
                candidatePhone:
                  type: string
                  description: 'The candidate’s mobile number. If sendInvitationSms is true, candidatePhone is required. SMS will be sent to this number.'
              required:
                - candidateEmail
                - candidateFirstName
            examples:
              example-1:
                value:
                  candidateEmail: candidate@example.com
                  candidateFirstName: Firstname
                  candidateLastName: Lastname
                  sendInvitationEmail: true
                  redirectCandidateUrl: 'https://partner-website.com/candidate-landing-page'
                  candidateAssessmentUuid: cbb3e136-ef30-4452-955b-1835a79caa65
                  reapply: false
      tags:
        - Candidates
      parameters: []
  '/integration/user-assessments/{candidateAssessmentUuid}':
    parameters:
      - schema:
          type: string
        name: candidateAssessmentUuid
        in: path
        required: true
        description: Candidate assessment ID.
    get:
      summary: 'GET: Candidate assessment report'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: The candidate report object
                    required:
                      - candidateAssessmentUuid
                      - status
                      - completedAt
                      - score
                      - integrationCandidateCardUrl
                    properties:
                      candidateAssessmentUuid:
                        type: string
                        description: Candidate assessment ID. Unique identifier for the candidate assessment.
                      status:
                        type: string
                        description: 'Assessment completion status. Possible values: complete, incomplete, in progress, or expired.'
                      completedAt:
                        type: string
                        description: 'Time at which the assessment was completed or null, if it wasn’t completed yet.'
                      score:
                        type: object
                        description: If assessment was completed outputs the array of available score data.
                        required:
                          - scoreByFormat
                        properties:
                          type:
                            type: string
                            description: 'Score type. Possible values: TYPE_MANUAL TYPE_AI'
                          score:
                            type: string
                            description: Score value.
                          scoreByFormat:
                            type:
                              - string
                              - number
                            description: Score formatted according to the predefined style. See 3.d and 3.e for examples of scoreByFormat.
                            nullable: true
                      integrationCandidateCardUrl:
                        type: string
                        description: URL for accessing candidate card profile in Vervoe.
                      timeTaken:
                        type: string
                        description: Time the candidate started.
                        nullable: true
                      submitTime:
                        type: string
                        nullable: true
                required:
                  - success
                  - data
              examples:
                example-1 Manual % Overall:
                  value:
                    success: true
                    data:
                      candidateAssessmentUuid: cbb3e136-ef30-4452-955b-1835a79caa65
                      status: complete
                      startedAt: '2020-03-04T12:19:12+00:00'
                      completedAt: '2020-01-13T22:04:24+11:00'
                      score:
                        type: TYPE_MANUAL
                        score: 100
                        scoreByFormat: 100
                      integrationCandidateCardUrl: 'https://company.vervoe.com/integration_candidate_card'
                example-2 Manual Group Scores with Text:
                  value:
                    success: true
                    data:
                      candidateAssessmentUuid: cbb3e136-ef30-4452-955b-1835a79caa65
                      status: complete
                      completedAt: '2020-01-13T22:04:24+11:00'
                      startedAt: '2020-03-04T12:19:12+00:00'
                      score:
                        type: TYPE_MANUAL
                        score: 100
                        scoreByFormat:
                          - groupName: Group 1
                            sort: 0
                            scoreType: 1
                            result: '60'
                            resultWithAdditionalText: '60'
                            scorePercentage: 60
                            scoreSum: 12
                      integrationCandidateCardUrl: 'https://company.vervoe.com/integration_candidate_card'
      operationId: get-user-assessments-candidateAssessmentUuid
      description: Get the candidate’s assessment report by candidate’s assessment ID.
      tags:
        - Candidates
  /integration/user-assessments:
    get:
      summary: 'GET: All candidates assessments report'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    required:
                      - currentPage
                      - total
                      - count
                      - hasMorePages
                      - items
                    properties:
                      currentPage:
                        type: integer
                        description: Current page offset
                      total:
                        type: integer
                        description: Total count of all results
                      count:
                        type: integer
                        description: Count of results for currentPage
                      hasMorePages:
                        type: boolean
                        description: 'If current page is last page from the result the output is ''false'', else ''true'''
                      items:
                        type: array
                        description: The candidate report object
                        items:
                          type: object
                          properties:
                            candidateAssessmentUuid:
                              type: string
                              description: Candidate assessment UUID is the unique identifier for the candidate assessment
                            status:
                              type: string
                              description: 'Assessment completion status. Possible values: complete, incomplete, expired, in_progress, hired, rejected'
                            completedAt:
                              type: string
                              description: 'Time at which the assessment was completed or null if it wasn''t completed yet. '
                            score:
                              type: object
                              description: 'If assessment was completed outputs the array of available score data. '
                              nullable: true
                              properties:
                                type:
                                  type: string
                                  description: 'Score type. Possible values: TYPE_MANUAL and TYPE_AI'
                                score:
                                  type: integer
                                scoreByFormat:
                                  type: object
                                  description: Score by format object outputs the score per skill
                                  properties:
                                    groupName:
                                      type: string
                                      description: The skill name by which quesitons are grouped
                                    sort:
                                      type: integer
                                      deprecated: true
                                      description: Deprecated
                                    ScoreType:
                                      type: integer
                                      description: 'Possible values: [1|2] Depends on values chosen in Assessment Skill Groups Settings: 1: Display score as a percentage. 2: Display custom text depending on score.'
                                    result:
                                      type: string
                                      description: The text selected fro scoreType 2 in Assessment settings. For scoreType 1 value of this field equals the value in scorePercentage field.
                                    resultWithAdditionalText:
                                      type: string
                                      description: 'For scoreType 2. Example value: "16/20 PTS - good result!"'
                                    scorePercentage:
                                      description: 'Score percentage calculated per group by this formula: scorePercentage = scoresSum/scoresCount*10'
                                      type: integer
                                    scoreSum:
                                      description: Sum of scores per skill
                                      type: integer
                                    isManualScore:
                                      type: boolean
                                      description: '''True'' if all scores in a groupName are determined by the Employer (manual grading or autograding), false otherwise.'
                                    questionGroupUuid:
                                      type: string
                                      description: UUID of questions belonging to a groupName/skill
                            startedAt:
                              type: string
                              description: Time at which the assessment was started or null if it wasn't started yet.
                            integrationCandidateCardUrl:
                              type: string
                              description: Url to get the candidate inforamtion card with detailed responses
                            timeTaken:
                              type: string
                              description: 'Time from when the assessment was started until it was submitted. Null if it was not submitted yet. '
                            submitTime:
                              type: string
                              description: The sum of time the candidate spent on each question or null if assessment wasn't completed yet.
                required:
                  - success
                  - data
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      currentPage: 1
                      total: 1
                      count: 1
                      hasMorePages: false
                      items:
                        - candidateAssessmentUuid: b1acd182-0f6e-450b-a4c9-ff68ed92790d
                          status: complete
                          completedAt: '2020-01-16T22:39:31+11:00'
                          startedAt: '2020-01-10T08:39:46+00:00'
                          score:
                            type: TYPE_MANUAL
                            score: 60
                            scoreByFormat:
                              - groupName: Group 1
                                sort: 0
                                scoreType: 1
                                result: '60'
                                resultWithAdditionalText: '60'
                                scorePercentage: 60
                                scoreSum: 12
                          integrationCandidateCardUrl: 'https://api.vervoe.com/integration-card/vito-222/11367?token=957465d469e2a6cf82e3b6dbc80eed7c5701df47'
      operationId: get-user-assessments
      description: |-
        Get paginated assessment report list with possibility to sort and filter. 

        Example request:
        https://api.vervoe.com/api/integration/user-assessments?page=1&sort=completed&order=desc&completed-gt=2020-01-16 22:31:10.0 UTC&completed-lt=2020-01-16 22:39:32.0 UTC
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: Must be greater than 0.
          required: true
        - schema:
            type: string
          in: query
          name: sort
          description: '(optional) updated by default. One of the following: completed (only with status=complete), created, updated.'
        - schema:
            type: string
          in: query
          name: order
          description: '(optional) Sort order asc by default. One of the following: asc, desc.'
        - schema:
            type: string
          in: query
          name: completed-gt
          description: '(optional) in DateTime format. A filter on the list based on the assessment completion date. The value can be a string in following datetime format: 2020-01-16 22:31:10.0 UTC. Return results where the assessment completion date field is greater than this value. If timezone isn''t specified, then we imply that the time is in the company''s timezone (which is set in company settings). If completed-gt and compelted-lt are set and completed-gt > completed-lt Bad Request error is returned. Can be used only with status=complete.'
        - schema:
            type: string
          in: query
          name: completed-lt
          description: '(optional) in DateTime format. A filter on the list based on the assessment completion date. The value can be a string in following datetime format: 2020-01-16 22:31:10.0 UTC. Return results where the assessment completion date field is smaller than this value. If timezone isn''t specified, then we imply that the time is in the company''s timezone (which is set in company settings). If completed-gt and completed-lt are set and completed-gt > completed-lt Bad Request error is returned. Can be used only with status=complete.'
        - schema:
            type: string
          in: query
          name: status
          description: '(optional) Filters by status. Null by default. One of the following: complete, expired, in_progress, hired, rejected'
      tags:
        - Candidates
    parameters: []
  /integration/assessments/folders:
    post:
      summary: 'POST: Create assessment folder'
      operationId: post-integration-assessments-folders
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: Assessment folder object
                    properties:
                      uuid:
                        type: string
                        description: Assessment folder UUID
                      name:
                        type: string
                        description: Name of assessment folder
                      auditionCount:
                        type: integer
                        description: Number of assessments in the folder
                        nullable: true
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      uuid: 7c5b2adf-4bb2-4283-8e72-6d9a50952f66
                      name: My folder
                      auditionCount: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    success: false
                    errors: Folder with title My Folder already exists!
                    msg: Folder with title My Folder already exists!
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Unauthorized:
                  value:
                    success: false
                    msg: Invalid credentials.
      description: 'With folders you can help organise your assessments and make them easier to manage. Use this API to create a new folder in your Vervoe account. '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of folder
              required:
                - name
            examples:
              example-1:
                value:
                  name: My folder
        description: ''
      parameters: []
      tags:
        - Folders
  '/integration/assessments/folders/{UUID}':
    parameters:
      - schema:
          type: string
        name: UUID
        in: path
        required: true
        description: The assessment folder unique ID
    delete:
      summary: 'DELETE: Delete assessment folder'
      operationId: delete-integration-assessments-folders-folderUuid
      responses:
        '204':
          description: No Content - There is no body for the response. Whether request is a success or if the folder is not found a 204 status will be returned.
      description: |
        Use this endpoint to delete an Assessment Folder in your Vervoe account. Assessments in the folder will not be deleted. Assessment will be available via the root folder. 
      tags:
        - Folders
      parameters: []
  'integration/assessments/folders/{UUID}':
    parameters:
      - schema:
          type: string
        name: UUID
        in: path
        required: true
        description: The assessment folder unique ID
    patch:
      summary: 'PATCH: Rename assessment to folder'
      operationId: patch-integration-assessments-assessmentSlug-folders-folderUuid-move
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: The assessment folder object
                    properties:
                      uuid:
                        type: string
                        description: The unique ID of the assessment folder
                      name:
                        type: string
                        description: The folder name
                      auditionCount:
                        type: integer
                        description: Number of assessments in the folder
                        nullable: true
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      uuid: 7c5b2adf-4bb2-4283-8e72-6d9a50952f66
                      name: New folder name
                      auditionCount: 3
      description: 'With the help of this endpoint, API users can rename existing folders.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the folder
            examples:
              example-1:
                value:
                  name: New folder name
      x-internal: false
      tags:
        - Folders
  '/integration/assessments/{assessmentSlug}/folders/{UUID}/move':
    parameters:
      - schema:
          type: string
        name: assessmentSlug
        in: path
        required: true
        description: The assessment slug
      - schema:
          type: string
        name: UUID
        in: path
        required: true
        description: The folder that you wish to move the assessment too
    patch:
      summary: 'PATCH: Move assessment to folder'
      operationId: patch-integration-assessments-assessmentSlug-folders-folderUUID-move
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      auditionFolder:
                        type: object
                        description: Assessment folder object
                        properties:
                          uuid:
                            type: string
                            description: Unique ID of the folder
                          name:
                            type: string
                            description: The folder name
                          auditionsCount:
                            description: Number of assessments in the folder
                            type: integer
                            nullable: true
                      description:
                        type: string
                        description: Description of the assessment
                      name:
                        type: string
                        description: Name of the assessment
                      slug:
                        type: string
                        description: The assessment slug
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      auditionFolder:
                        uuid: 7c5b2adf-4bb2-4283-8e72-6d9a50952f66
                        name: My folder name
                        auditionsCount: 3
                      description: Assessment Description
                      name: Assessment Name
                      slug: assessment-slug
      x-internal: false
      tags:
        - Folders
      description: Move an assessment from one folder to another.
      parameters: []
  '/integration/assessments/{assessmentSlug}/folders':
    parameters:
      - schema:
          type: string
        name: assessmentSlug
        in: path
        required: true
        description: The assessment slug
    delete:
      summary: 'DELETE: Remove assessment from current folder'
      operationId: delete-integration-assessments-assessmentSlug-folders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: number
                  data:
                    type: object
                    properties:
                      auditionFolder:
                        description: The assessment folder
                        nullable: true
                      description:
                        type: string
                        description: The assessment description
                      name:
                        type: string
                        description: The assessment name
                      slug:
                        type: string
                        description: The assessment slug
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      auditionFolder: 'null'
                      description: Assessment Description
                      name: Assessment Name
                      slug: assessment-slug
      description: 'Use this endpoint if you no longer wish for an assessment to belong to a specific folder. The assessment itself will not be deleted, it can still be found in the root folder.'
      x-internal: false
      tags:
        - Folders
      parameters: []
  '/public/apihealthcheck/{apiKey}':
    parameters:
      - schema:
          type: string
        name: apiKey
        in: path
        required: true
        description: Your API key
    get:
      summary: 'GET: Health Check monitoring on Vervoe API'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: string
                required:
                  - success
                  - data
              examples:
                'status: 200':
                  value:
                    success: true
                    data: ok
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: string
                required:
                  - success
                  - errors
              examples:
                'status: 503 Service Unavailable':
                  value:
                    success: false
                    errors: Service Unavailable
      operationId: get-public-apihealthcheck-apiKey
      description: Used for monitoring Vervoe API Health Status.
      tags:
        - API Health
  '/integration/user-assessments/{candidateAssessmentUuid}/reject':
    parameters:
      - schema:
          type: string
        name: candidateAssessmentUuid
        in: path
        required: true
        description: Candidate assessment ID
    post:
      summary: 'POST: Reject candidate'
      operationId: post-integration-user-assessments-candidateAssessmentUuid-reject
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: The candidate report object holds information about a candidates assessment
                    properties:
                      candidateAssessmentUuid:
                        type: string
                        description: Candidate assessment UUID is the unique identifier for the specific assessment
                      status:
                        type: string
                        description: 'Assessment completion status. Possible values: complete, incomplete, expired, in_progress, hired, rejected.'
                      startedAt:
                        type: string
                        description: 'Time at which the assessment was started or null, if it wasn''t completed yet. '
                        nullable: true
                      completedAt:
                        type: string
                        description: Time at which the assessment was completed or null if it wasn't completed yet.
                        nullable: true
                      score:
                        type: object
                        description: Score object returns null
                        nullable: true
                      integrationCandidateUrl:
                        type: string
                        description: Url tot he candidate information card containing score and detailed answers.
                      timeTaken:
                        type: string
                        description: 'Time from start to submit assessment or null, if it wasn''t completed yet. '
                      submitTime:
                        type: string
                        description: 'The sum of time the candidate spent on each question or null if the assessment was not completed yet. '
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      candidateAssessmentUuid: da8e6303-a165-4215-9b1a-113ee4cc28b6
                      status: rejected
                      startedAt: '2021-03-03T15:44:44+00:00'
                      completedAt: null
                      score: null
                      integrationCandidateUrl: 'https://company.vervoe.com/integration_candidate_card'
                      timeTaken: null
                      submitTime: null
      tags:
        - Candidates
      x-internal: false
      description: |-
        Use our reject API for candidates that did not meet your requirements to progress in the selection process. 

        This will trigger a Reject email to the candidate IF it has been set up and enabled in the Vervoe UI. 
  '/https://api.vervoe.com/api/integration/user-assessments/{candidateAssessmentUuid}/hire':
    parameters:
      - schema:
          type: string
        name: candidateAssessmentUuid
        in: path
        required: true
        description: The unique identifier of the candidate assessment
    patch:
      summary: 'PATCH: Hire candidate'
      operationId: 'patch-https:-api.vervoe.com-api-integration-user-assessments-candidateAssessmentUuid-hire'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: Candidate Report Object which holds data about the unique candidate assessment
                    properties:
                      candidateAssessmentUuid:
                        type: string
                        description: The unique identifier to the candidate's assessment
                      status:
                        type: string
                        description: 'Assessment completion status. Possible values: complete, incomplete, expired, in progress, hired, rejected.'
                      startedAt:
                        type: string
                        description: 'Time at which the assessment was started or null, if it wasn’t started yet'
                        nullable: true
                      completedAt:
                        description: 'Time at which the assessment was completed or null, if it wasn’t completed yet.'
                        nullable: true
                      score:
                        description: The object holding a candidates scores. Will always return null for this API call
                        nullable: true
                      integrationCandidateCardUrl:
                        type: string
                        description: Url to the candidate information card including scores and detailed answers
                      timeTaken:
                        description: 'Time from start to submit assessment  or null, if it wasn’t completed yet'
                        nullable: true
                      submitTime:
                        description: 'The sum of time the candidate spent on each question  or null, if assessment wasn’t completed yet'
                        nullable: true
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      candidateAssessmentUuid: da8e6303-a165-4215-9b1a-113ee4cc28b6
                      status: hired
                      startedAt: '2021-03-03T15:44:44+00:00'
                      completedAt: null
                      score: null
                      integrationCandidateCardUrl: 'https://company.vervoe.com/integration_candidate_card'
                      timeTaken: null
                      submitTime: null
      description: Hire the candidate by the candidate's assessment UUID
      tags:
        - Candidates
  '/https://api.vervoe.com/api/integration/user-assessments/{candidateAssessmentUuid}/unhire':
    parameters:
      - schema:
          type: string
        name: candidateAssessmentUuid
        in: path
        required: true
        description: The unique candidate assessment ID
    patch:
      summary: 'PATCH: Unhire candidate'
      operationId: 'patch-https:-api.vervoe.com-api-integration-user-assessments-candidateAssessmentUuid-unhire'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: Candidate Report Object which holds information about a candidates assessment
                    properties:
                      candidateAssessmentUuid:
                        type: string
                        description: The Unique identifier to a candidate's assessment
                      status:
                        type: string
                        description: 'Assessment completion status. Possible values: complete, incomplete, expired, in progress, hired, rejected.'
                      startedAt:
                        type: string
                        description: 'Time at which the assessment was started or null, if it wasn’t started yet'
                      completedAt:
                        description: 'Time at which the assessment was completed or null, if it wasn’t completed yet.'
                        nullable: true
                      score:
                        description: If assessment was completed outputs the array of available score data. Will always return null for this API call
                        nullable: true
                      integrationCandidateCardUrl:
                        type: string
                        description: Url to get the candidate info card
                      timeTaken:
                        description: 'Time from start to submit assessment  or null, if it wasn’t completed yet'
                        nullable: true
                      submitTime:
                        description: 'The sum of time the candidate spent on each question  or null, if assessment wasn’t completed yet'
                        nullable: true
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      candidateAssessmentUuid: da8e6303-a165-4215-9b1a-113ee4cc28b6
                      status: completed
                      startedAt: '2021-03-03T15:44:44+00:00'
                      completedAt: null
                      score: null
                      integrationCandidateCardUrl: 'https://company.vervoe.com/integration_candidate_card'
                      timeTaken: null
                      submitTime: null
      tags:
        - Candidates
  /public/ats-api/token:
    get:
      summary: 'GET: Authentication'
      tags:
        - Authentication
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        minLength: 1
                    required:
                      - token
                required:
                  - success
                  - data
                x-examples:
                  example-1:
                    success: true
                    data:
                      token: 7He9ABtS1t6LLhOTyAr3M0uvF1mTa4w2r7koKVx83s373khNVtXp-WK3ufXuYasSc4mpUVwo0X4jcxpB1JBh4YRLN3bppvd_F-POMUCZPWGYIP7jz7h47cnD4Db9hqP2b4JdvO4N8y7bpqz6gcYnz6huSAHNy0ADEGWoqR5PvMpWeZBBrqzi8lHE4rgV4g9KBDp-bUbLybsuy-cvI1ueD4W5YUzd55-nn80fvBhAMDH5r18CVoIiSjY4CfTO7GY-bNUvLE4AMFk27XwyCxhJJ-uY4katIuQwkdB4vfECPYNFbXVPOiUtGL1K5Y5IzPCxKpn9ApfOeVDFSoXYectASVGu4wqcU1AnHtL54hdcYyQJXfX9fBB0owXxuPWLaRJlVQhUUNAGSfp5owbtSxpf0PmeynuDlUdOM2hFbSGXyx5RzycwkTM1LDiIKKgYCHirqswrgX7mBxQXfXo3U3GXobAQsxRwFOPTqvPWrrSXGIjfna1_x4rGb_XvWEtwzmYOX02cZH2Q0A5Vcql0tDRyHBovU7s6Y
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      token: 7He9ABtS1t6LLhOTyAr3M0uvF1mTa4w2r7koKVx83s373khNVtXp-WK3ufXuYasSc4mpUVwo0X4jcxpB1JBh4YRLN3bppvd_F-POMUCZPWGYIP7jz7h47cnD4Db9hqP2b4JdvO4N8y7bpqz6gcYnz6huSAHNy0ADEGWoqR5PvMpWeZBBrqzi8lHE4rgV4g9KBDp-bUbLybsuy-cvI1ueD4W5YUzd55-nn80fvBhAMDH5r18CVoIiSjY4CfTO7GY-bNUvLE4AMFk27XwyCxhJJ-uY4katIuQwkdB4vfECPYNFbXVPOiUtGL1K5Y5IzPCxKpn9ApfOeVDFSoXYectASVGu4wqcU1AnHtL54hdcYyQJXfX9fBB0owXxuPWLaRJlVQhUUNAGSfp5owbtSxpf0PmeynuDlUdOM2hFbSGXyx5RzycwkTM1LDiIKKgYCHirqswrgX7mBxQXfXo3U3GXobAQsxRwFOPTqvPWrrSXGIjfna1_x4rGb_XvWEtwzmYOX02cZH2Q0A5Vcql0tDRyHBovU7s6Y
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: string
                    minLength: 1
                  msg:
                    type: string
                    minLength: 1
                required:
                  - success
                  - errors
                  - msg
                x-examples:
                  example-1:
                    success: false
                    errors: Provide apiKey/secret please.
                    msg: Provide apiKey/secret please.
              examples:
                example-1:
                  value:
                    success: false
                    errors: Provide apiKey/secret please.
                    msg: Provide apiKey/secret please.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  status:
                    type: number
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - status
                  - detail
                x-examples:
                  example-1:
                    type: 'https://tools.ietf.org/html/rfc2616#section-10'
                    title: An error occurred
                    status: 401
                    detail: Unauthorized
              examples:
                example-1:
                  value:
                    type: 'false'
                    title: An error occured
                    status: 401
                    detail: Unauthorized
      operationId: get-public-ats-api-token
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Basic <\Base64 encoded apiKey:secretKey>'
      description: |-
        We use tokens to authenticate the API users. Those tokens must be sent on every API request in the Authorization header.

        Token expiration time is 10 minutes. After that time API users must obtain a new token using this endpoint. 
components:
  schemas: {}
  examples: {}
  securitySchemes: {}
